.w-50vw {
  width: 50%;
}

.w-80vw {
  width: 80vw;
}

.w-100p {
  width: 100%;
}

.relative {
  position: relative;
}

.col {
  display: flex;
  flex-direction: column;
  flex: 1;
}

.col-md {
  @media only screen and (min-width: 768px) {
    display: flex;
    flex-direction: column;
    flex: 1;
  }
}

.row {
  display: flex;
  flex-direction: column;
  flex: 1;
}

.row-md {
  @media only screen and (min-width: 768px) {
    display: flex;
    flex-direction: row;
    flex: 1;
  }
}

.item-start {
  align-items: flex-start;
}

.item-center {
  align-items: center;
}

.center {
  justify-content: center;
  align-items: center;
  text-align: center;
}

.color-bg {
  color: var(--background);
}

.fw-700 {
  font-weight: 700;
}

// Spacing

@function str-replace($string, $search, $replace: "") {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace +
      str-replace(
        str-slice($string, $index + str-length($search)),
        $search,
        $replace
      );
  }

  @return $string;
}

$types: (("m", "margin"), ("p", "padding"));
$sides: (("t", "top"), ("b", "bottom"), ("l", "left"), ("r", "right"));
$axes: ("x", "y");

// 0rem, 0p25rem, 0p5rem ... 3p75rem
@for $i from 0 through (4 * 4) {
  // 0.25 -> 0p25
  $class-name: str-replace(#{0.25 * $i}, ".", "p");
  $size: $i * 0.25rem;

  .fs-#{$class-name} {
    font-size: $size;
  }

  .gap-#{$class-name} {
    display: flex;
    gap: $size;
  }

  @each $type in $types {
    $typeAbbr: nth($type, 1);
    $prop: nth($type, 2);

    .#{$typeAbbr}-#{$class-name} {
      #{$prop}: $size;
    }

    @each $side in $sides {
      $sideAbbr: nth($side, 1);
      $sideName: nth($side, 2);
      .#{$typeAbbr}#{$sideAbbr}-#{$class-name} {
        #{$prop}-#{$sideName}: $size;
      }
    }

    @each $axis in $axes {
      .#{$typeAbbr}#{$axis}-#{$class-name} {
        @if $axis == "x" {
          #{$prop}-left: $size;
          #{$prop}-right: $size;
        } @else if $axis == "y" {
          #{$prop}-top: $size;
          #{$prop}-bottom: $size;
        }
      }
    }
  }
}
